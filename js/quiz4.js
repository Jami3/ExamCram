var quiz4 = [

{"Question":"To access the 4th element in an arraylist named arrList, we say arrList[3]","tags":["Theory","Collections"],"type":"mcq","options":["True","False"],"answer":"False"},
{"Question":"Method overriding is when multiple methods have the same name but different parameters ","tags":["Theory","Methods"],"type":"mcq","options":["True","False"],"answer":"False"},
{"Question":"All classes are subclasses of the Object class","tags":["Theory","Classes"],"type":"mcq","options":["True","False"],"answer":"True"},
{"Question":"The \"implements\" keyword is used to implement another class into another ","tags":["Theory","Keywords"],"type":"mcq","options":["True","False"],"answer":"False"},
{"Question":"Method overloading is when multiple methods have the same name but different parameters ","tags":["Theory","Methods"],"type":"mcq","options":["True","False"],"answer":"True"},
{"Question":"Private data fields (field variables) from the superclass cannot be directly accessed from the subclass ","tags":["Theory","Variables","Inheritance"],"type":"mcq","options":["True","False"],"answer":"True"},
{"Question":"The \"instanceof\" operator checks if an object is an instance of a specific class and then automatically casts it to that class type ","tags":["Theory","Objects","Classes"],"type":"mcq","options":["True","False"],"answer":"False"},
{"Question":"The extends keyword is used to create a subclass from a superclass ","tags":["Theory","Keywords","Inheritance"],"type":"mcq","options":["True","False"],"answer":"True"},
{"Question":"An abstract class can have both regular methods and abstract methods ","tags":["Theory","Methods","Abstract"],"type":"mcq","options":["True","False"],"answer":"True"},
{"Question":"Polymorphism is the ability of an object to take on many forms ","tags":["Theory","Polymorphism"],"type":"mcq","options":["True","False"],"answer":"True"},
{"Question":"Interfaces are the exact same thing as abstract classes, except they don’t have data fields ","tags":["Theory","Inheritance"],"type":"mcq","options":["True","False"],"answer":"False"},
{"Question":"Printing out an object does not call the toString() method ","tags":["Theory","Output","Strings"],"type":"mcq","options":["True","False"],"answer":"False"},
{"Question":"Programmers must manually extend the Object class to get all specialized class methods, such as toString(), getClass() and wait() ","tags":["Theory","Objects","Methods"],"type":"mcq","options":["True","False"],"answer":"False"},
{"Question":"Method overloading is something that is used extensively in the Java API","tags":["Theory","Methods"],"type":"mcq","options":["True","False"],"answer":"True"},
{"Question":"JavaFX and Java AWT classes are cross-compatible, meaning the MouseEvent for one is compatible with the other ","tags":["Theory","Javafx"],"type":"mcq","options":["True","False"],"answer":"False"},
{"Question":"You can extend a class with Exception to make your own custom exception classes ","tags":["Theory","Exceptions"],"type":"mcq","options":["True","False"],"answer":"True"},
{"Question":"There are no differences between Interfaces and Abstract classes and the two can be used interchangeably ","tags":["Theory","Inheritance"],"type":"mcq","options":["True","False"],"answer":"False"},
{"Question":"Objects reside on the memory heap, and methods work through the Stack Frame ","tags":["Theory","Objects","Methods"],"type":"mcq","options":["True","False"],"answer":"True"},
{"Question":"Which of the following is a declaration and initialization of a HashMap that has a String as a key and an Integer a value?","tags":["Theory","Collections"],"type":"mcq","options":["HashMap myMap = new HashMap();","HashMap<String, Integer> myMap = new HashMap<String, Integer>();","HashMap<Integer, String> myMap = new HashMap<Integer, String>();","HashMap<String> myMap = new HashMap<String>();"],"answer":"HashMap<String, Integer> myMap = new HashMap<String, Integer>();"},
{"Question":"In JavaFX, we extend our main class from which class?","tags":["Theory","Javafx"],"type":"mcq","options":["Stage","VBox","Application","Button"],"answer":"Application"},
{"Question":"Which of the following creates a two-dimensional array of int with 5 columns and 6 rows?","tags":["Arrays"],"type":"mcq","options":["int[][] arr1 = new int[6][5];","int[][] arr2 = new Double[6][5];","int[][] arr3 = new arr[5][6];","int[][] arr4 = new double[5][6];"],"answer":"int[][] arr1 = new int[6][5];"},
{"Question":"You get  _________ errors when your FXML variable doesn’t match the FXML ID","tags":["Theory","Javafx"],"type":"mcq","options":["Runtime","No","Logic","Syntax"],"answer":"Runtime"},
{"Question":"Which of the following shows autoboxing?","tags":["Theory"],"type":"mcq","options":["Integer num = new Integer(98);","Double num = new Double (93.0);","Double num = 23.7;","Integer num = 43.1;"],"answer":"Double num = 23.7;"},
{"Question":"A Person object contains a Name object. A Name cannot exist without a Person, and one Name object belongs to only one Person object. This demonstrates a(n) ______________ relationship.","tags":["Theory","Objects","Inheritance"],"type":"mcq","options":["Aggregation","Association","Composition","Dependency"],"answer":"Composition"},
{"Question":"The constructor for an enumeration must:","tags":["Theory","Constructors","Enums"],"type":"mcq","options":["Be void","Have a protected visibility","Have a private visibility","Never have more than 2 parameters"],"answer":"Have a private visibility"},
{"Question":"Given the following choices, which one is correct about interfaces?","tags":["Theory","Inheritance","Keywords"],"type":"mcq","options":["We can make objects out of interfaces","Interfaces can have data fields as well","Interfaces can have abstract methods as well as regular methods","We use the implements keyword to use an interface"],"answer":"We use the implements keyword to use an interface"},
{"Question":"When a method is defined in the subclass using the same signature and the same return type as in its superclass, it is known as:","tags":["Theory","Methods","Inheritance"],"type":"mcq","options":["Method overloading","Method overshadowing","Method overriding ","None of the above "],"answer":"Method overriding "},
{"Question":"What method is declared in the Comparable interface?","tags":["Theory","Inheritance","Methods"],"type":"mcq","options":["compareTo()","compare()","compareThis()","comparable()"],"answer":"compareTo()"},
{"Question":"Assuming class Student extends class Person, which of the following calls the Person constructor from the Student class?","tags":["Constructors","Inheritance","Methods"],"type":"mcq","options":["base()","base.Person()","super()","super.Person()"],"answer":"super()"},
{"Question":"Which of the following panes places the nodes in a single column?","tags":["Javafx"],"type":"mcq","options":["HBox","VBox","StackPane","FlowPane"],"answer":"VBox"},
{"Question":"What is the typical output of an object’s default toString() method when it is printed out?","tags":["Output","Objects","Methods","Strings","Theory"],"type":"mcq","options":["Name of the object","Number of instance variables","Time of object creation","Memory address on the heap"],"answer":"Memory address on the heap"},
{"Question":"Using a debugger allows us to:","tags":["Theory"],"type":"mcq","options":["Trace through the execution of a program","View the states and values of various variables","Makes our lives much easier, as it can show why a program is crashing or following an unexpected execution path","All of the above"],"answer":"All of the above"},
{"Question":"Exception chaining is achieved through:","tags":["Exceptions","Theory"],"type":"mcq","options":["Extending the Exception class","Making your method return an incorrect value","Having a method with a throws clause in the declaration","None of the above, Exception chaining does not exist in Java"],"answer":"Having a method with a throws clause in the declaration"},
{"Question":"Assume there is a Java array that is declared as: int[][] array = new int[3][4]; What is the data type of array[2][1]?","tags":["Theory","DataType","Collections"],"type":"mcq","options":["int[]","int","int[][]","None of the above"],"answer":"int"},
{"Question":"Assume there is a Java array that is declared as: int[][] array = new int[3][4]; What is the data type of array[2]?","tags":["Theory","Collections","DataType"],"type":"mcq","options":["int[]","int","int[][]","None of the above"],"answer":"int[]"},
{"Question":"Assume there is a Java array that is declared as: int[][] array = new int[3][4]; What is the data type of array?","tags":["Theory","Datatype","Collections"],"type":"mcq","options":["int[]","int","int[][]","None of the above"],"answer":"int[][]"},
{"Question":"\tA(n) ___________ is an exception that occurs when you’re using array elements from non-existent locations","tags":["Theory","Exceptions","Collections"],"type":"blank","answer":"ArrayIndexOutOfBoundsException"},
{"Question":"We write__________ to declare a two-dimensional array of int named 'arr' and initialize it to have 5 rows and 4 columns.","tags":["Collections"],"type":"blank","answer":"int[][] arr = new int[5][4]"},
{"Question":"What is the relationship of the following classes?","tags":["Theory","Inheritance"],"type":"blank","questionImg":"Code3.png","answer":"Aggregation"},
{"Question":"What is the relationship of the following classes?","tags":["Theory","Inheritance"],"type":"blank","questionImg":"Code4.png","answer":"Composition"},
{"Question":"What is the relationship of the following classes?","tags":["Theory","Inheritance"],"type":"blank","questionImg":"Code5.png","answer":"Inheritance"},
{"Question":"A stack follows the Last ______, First _______ data structure.","tags":["Theory","Collections"],"type":"superMCQ","answer":["in","out"],"options":["",""]},
{"Question":"An enum is similar to a class of _____________","tags":["Theory","Enums"],"type":"blank","answer":"constants"},
{"Question":"The wrapper class of int is _____________","tags":["Theory","Datatypes","Classes"],"type":"blank","answer":"Integer"},
{"Question":"By default, methods declared in an interface is ___________","tags":["Theory","Methods","Inheritance"],"type":"blank","answer":"abstract"},
{"Question":"The angle brackets < > (ex. ArrayList<String>) is called a ___________","tags":["Theory","Collections"],"type":"blank","answer":"generic"},
{"Question":"We use the _________ operator to check if an object is an instance of a specific class","tags":["Objects","Classes"],"type":"blank","answer":"instanceof"},
{"Question":"To get the 5th element in an ArrayList called “arrList” we write ___________","tags":["Collections"],"type":"blank","answer":"arrList.get(4)"},
{"Question":"To get the 6th element in an array called “arr” we write ___________","tags":["Collections"],"type":"blank","answer":"arr[5]"},
{"Question":"To make an ArrayList of floating point numbers it would look like ArrayList<___________> arr = new ArrayList<>();","tags":["Collections","Variables"],"type":"blank","answer":"Double"},
{"Question":"________ exceptions are exceptions that are checked during compile time","tags":["Theory","Compiler","Exceptions"],"type":"blank","answer":"Checked"},
{"Question":"The ________________ statement is a try statement that declares one or more resources","tags":["Theory"],"type":"blank","answer":"try-with-resources"},
{"Question":"A LinkedList typically has a _______, followed by one or more __________, and lastly has a _______","tags":["Theory","Collections"],"type":"superMCQ","answer":["head","nodes","tail"],"options":["","",""]},
{"Question":"_________ exception are exceptions that are not checked during compile time","tags":["Theory","Compiler","Exceptions"],"type":"blank","answer":"Unchecked"},
{"Question":"The ___________ block always runs whether an exception occurs or not.","tags":["Exceptions","Theory"],"type":"blank","answer":"finally"},
{"Question":"In JavaFX, a _______ acts as a container for controls, ex. VBox and HBox","tags":["Javafx","Theory"],"type":"blank","answer":"pane"},
{"Question":"The Comparable interface contains a single method called _________ that must be implemented in the class that implements it","tags":["Theory","Classes","Inheritance",""],"type":"blank","answer":"compareTo"},
{"Question":"Enumerations are usually declared at the ______ of a class file, and have constructors with a ______ visibility modifier","tags":["Theory","Enums"],"type":"superMCQ","answer":["top","private"],"options":["",""]},
{"Question":"The _____ keyword indicates that a method might throw an Exception.","tags":["Theory","Exceptions","Keywords"],"type":"blank","answer":"throws"},
{"Question":"What does the following code print out?","tags":["Output","Collections","Loops",""],"type":"shortA","questionImg":"ShortCode6.png","answer":"01234\n01234\n01234\n01234\n01234\n01234"},
{"Question":"\\Which of the following is an example of a try-with-resources statement?","tags":["Exceptions"],"type":"mcq","questionImg":"Code1.png","options":["A","B","Neither","Both"],"answer":"Both"},
{"Question":"A program that keeps track of orders at a food truck that serves different flavours of ice cream uses an enum for the flavour that a customer can have added to their menu item. Each enum constant is assigned a name and price. Clearly this enumeration is not finished. Write the code that needs to be added to it. ","tags":["Enums"],"type":"blank","questionImg":"Code2.png","answerImg":"Code2.png"},
{"Question":"Will the following code compile? Why or why not?","tags":["Compiler","Theory","Exceptions"],"type":"shortA","questionImg":"Code7.png","answer":"This code will not compile. The Manager class implicitly has a no-argument constructor, and since it extends Employee it tries to call super(). However, the Employee class does not have a no-argument constructor, so this is a compile error. "},
{"Question":"What is the purpose of Abstract classes? What kinds of classes would you make abstract?","tags":["Theory","Collections"],"type":"shortA","answer":"The purpose of abstract classes is to provide a common method implementation between the subclasses of the abstract class. You would make very general classes, such as Shape or GeometricObject, as abstract classes."},
{"Question":"When the following class compiles and runs, will it show an exception? If there is an exception, what would the reason it be? ","tags":["Compiler","Exceptions"],"type":"shortA","questionImg":"Code8.png","answer":"The following code will compile and run, but it might throw a ClassCastException depending on the value of “c”. The Company object “c” could be a type Microsoft, but not necessarily. Because of this, it’s possible that it might throw an exception. "},
{"Question":"How many classes could you extend from? How many interfaces can you implement from a single class? Write a class declaration with a class name of “IPhone” which is a subclass of “Device” and implements Comparable. ","tags":["Collections","Classes"],"type":"shortA","answer":"You can only extend from one class. You can implement as many interfaces as you want in a single class. \n\npublic class IPhone extends Device implements Comparable {\n} "},
{"Question":"Describe what you should do in the “catch” block for an exception that happens when reading input from the user. ","tags":["Exceptions","Input"],"type":"shortA","answer":"You should show an error message (ex. Please enter a valid input. Only numbers are accepted) and you should allow the user to retype another input and test it again."},
{"Question":"When using JavaFX, what CSS property would you use to change the desired font of a control?","tags":["Javafx","Styling"],"type":"shortA","answer":"As with CSS and FX, you would use the -fx-font property to alter the font for a control. It would typically be used like: -fx-font: 16px “Serif”;"},
{"Question":"Create a UML diagram that shows the relationships between all classes for the following code: ","tags":["Theory","Uml","Inheritance"],"type":"shortA","questionImg":"Code6.png","answerImg":"Code6.png"},
{"Question":"Assume you’re trying to read from a text file that contains the following. How would you take each line and create an Animal object out of it? Assume there’s an Animal class pre-made for you.","tags":["Files","Objects","Strings","Constructors"],"type":"shortA","questionImg":"Code9.png","answer":"Read through the file and store each line as a separate string. Split each string by the commas and store each piece into a corresponding variable with a proper data type. Use these variables to create an Animal object by passing it through the constructor."},
{"Question":"What is the output of the following:","tags":["Output","Javafx"],"type":"shortA","questionImg":"Code10.png","answer":"Austin\n\n2"},
{"Question":"What prints when the following code is executed? ","tags":["Exceptions","Output","Methods"],"type":"blank","questionImg":"Code11.png","answer":"RuntimeException in method() after the method call "},
{"Question":"Correct a compile error in the following code: ","tags":["Compiler","Exceptions","Keywords"],"type":"shortA","questionImg":"Code12.png","answer":"Method header is missing the ‘throws’ keyword \n\npublic void m(int value) throws Exception { … } "},
{"Question":"Look at the following code and answer the following questions. What is this an example of? What is the value of nums[1][0] ?  What is the answer for nums.length? What is the answer for nums[1].length?","tags":["Collections"],"type":"superMCQ","questionImg":"Code14.png","answer":["Ragged array","3","3","2"],"options":["","","",""]},
{"Question":"Given the following Stack Trace, describe some key attributes from it; such as the type of exception, most important error message given, and what class file the bug most likely is in. Recall that not everything in a Stack Trace is at all relevant to the error at hand.","tags":["Exceptions"],"type":"shortA","questionImg":"Code15.png","answer":"True error: IllegalArgumentException; \nMessage: Invalid URL or Resource Not found; \nCaused in pacman.MazeLevel.getSpriteImagePath(MazeLevel.java:167);"},
{"Question":"Convert the following to an ArrayList: ","tags":["Collections"],"type":"shortA","questionImg":"Code16.png","answerImg":"Code16.png","answer":""},
{"Question":"Write a custom interface called Shareable. This interface only contains one method called share which takes two parameters: an int and double. It also returns nothing. ","tags":["Inheritance","Methods","Classes"],"type":"shortA","answer":"public interface Shareable {\n\n\\tpublic void share(int x, double y) {\n \n\\t}\n}"},
{"Question":"","tags":["Enums"],"type":"shortA","questionImg":"Code17.png","answerImg":"Code17.png", "answer":""},
{"Question":"Write a program that initializes and then prints a 2-D array of ints. You should ask the user for the number of rows and columns (these will be the dimensions of your array make sure they enter valid numbers as dimensions!) and then you should initialize the array to have random values between 1 and 100 and then print out the array. When printing the array, the columns should be comma-separated, and each row should be on a new line, so for the 2-D array {{1,2,3},{4,5,6},{7,8,9}} we would print: \\n1,2,3\\n4,5,6\\n7,8,9","tags":["Collections","Input","Output"],"type":"shortA","answerImg":""},
{"Question":"The following code is expressed using a Lambda Expression. Rewrite the code from a Lambda Expression into an Anonymous inner class:","tags":["Javafx","Input"],"type":"shortA","questionImg":"Code19.png","answerImg":"Code19.png","answer":""}

]
